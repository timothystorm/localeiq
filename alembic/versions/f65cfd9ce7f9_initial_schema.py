"""initial schema

Revision ID: f65cfd9ce7f9
Revises:
Create Date: 2025-08-04 20:53:55.070445

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "f65cfd9ce7f9"
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "country",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("iso_alpha2", sa.String(length=2), nullable=False),
        sa.Column("iso_alpha3", sa.String(length=3), nullable=False),
        sa.Column("iso_numeric", sa.String(length=3), nullable=False),
        sa.Column("sovereign", sa.Boolean(), nullable=True),
        sa.Column("is_disputed", sa.Boolean(), nullable=True),
        sa.Column(
            "created_at", sa.TIMESTAMP(), server_default=sa.text("now()"), nullable=True
        ),
        sa.Column(
            "updated_at", sa.TIMESTAMP(), server_default=sa.text("now()"), nullable=True
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("iso_numeric"),
    )
    op.create_index(
        op.f("ix_country_iso_alpha2"), "country", ["iso_alpha2"], unique=True
    )
    op.create_index(
        op.f("ix_country_iso_alpha3"), "country", ["iso_alpha3"], unique=True
    )
    op.create_table(
        "country_localized_name",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("country_id", sa.Integer(), nullable=True),
        sa.Column("language_code", sa.Text(), nullable=False),
        sa.Column("localized_name", sa.Text(), nullable=False),
        sa.Column(
            "created_at", sa.TIMESTAMP(), server_default=sa.text("now()"), nullable=True
        ),
        sa.Column(
            "updated_at", sa.TIMESTAMP(), server_default=sa.text("now()"), nullable=True
        ),
        sa.CheckConstraint(
            "length(language_code) >= 2", name="check_language_code_length"
        ),
        sa.ForeignKeyConstraint(["country_id"], ["country.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_country_localized_name_language_code"),
        "country_localized_name",
        ["language_code"],
        unique=False,
    )
    op.create_table(
        "country_meta",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("country_id", sa.Integer(), nullable=True),
        sa.Column("currency_code", sa.String(length=3), nullable=True),
        sa.Column("currency_name", sa.Text(), nullable=True),
        sa.Column("currency_symbol", sa.Text(), nullable=True),
        sa.Column("calling_codes", sa.ARRAY(sa.Text()), nullable=True),
        sa.Column("timezones", sa.ARRAY(sa.Text()), nullable=True),
        sa.Column("languages", sa.ARRAY(sa.Text()), nullable=True),
        sa.Column("driving_side", sa.Text(), nullable=True),
        sa.Column(
            "created_at", sa.TIMESTAMP(), server_default=sa.text("now()"), nullable=True
        ),
        sa.Column(
            "updated_at", sa.TIMESTAMP(), server_default=sa.text("now()"), nullable=True
        ),
        sa.CheckConstraint(
            "driving_side IN ('left', 'right')", name="check_driving_side"
        ),
        sa.ForeignKeyConstraint(["country_id"], ["country.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("country_meta")
    op.drop_index(
        op.f("ix_country_localized_name_language_code"),
        table_name="country_localized_name",
    )
    op.drop_table("country_localized_name")
    op.drop_index(op.f("ix_country_iso_alpha3"), table_name="country")
    op.drop_index(op.f("ix_country_iso_alpha2"), table_name="country")
    op.drop_table("country")
    # ### end Alembic commands ###
